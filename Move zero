Given an integer array nums, move all 0's to the end of it while maintaining the relative order of the non-zero elements.

Note that you must do this in-place without making a copy of the array.

 

Example 1:

Input: nums = [0,1,0,3,12]
Output: [1,3,12,0,0]
Example 2:

Input: nums = [0]
Output: [0]

solution:
class Solution {
    public void moveZeroes(int[] nums) {
        int n = nums.length;
        int j = -1; // Initialize to -1 in case there are no zeros initially
    
        for(int i = 0; i < n; i++){
            if(nums[i] == 0){
                j = i; // Store the position of the first zero
                break;
            }
        }

        // If no zeros are found, no need to process further
        if (j == -1) return;

        // Second loop to swap non-zero elements after the first zero with the zero at position j
        for(int i = j + 1; i < n; i++){
            if(nums[i] != 0){
                // Swap nums[i] and nums[j]
                int temp = nums[i];
                nums[i] = nums[j];
                nums[j] = temp;
                
                j++; // Move j to the next zero position
            }
        }
    }
}
