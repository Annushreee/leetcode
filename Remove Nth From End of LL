Given the head of a linked list, remove the nth node from the end of the list and return its head.

Example 1:
Input: head = [1,2,3,4,5], n = 2
Output: [1,2,3,5]

SOLUTION::
/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode removeNthFromEnd(ListNode head, int n) {
        //first w'll calculate the size of ll
        int size = 0;
        ListNode temp = head;
        while(temp != null){
            temp = temp.next;
            size++;
        }
        if(n == size ){
            head = head.next;
            return head;
        }
        //if size>n
        int i = 1;
        int itofind = size - n;
        ListNode prev = head ;
        while (i<itofind){
            prev = prev.next;
            i++;
        }
        prev.next = prev.next.next;
        return head;
       
    }
}
