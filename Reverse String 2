Given a string s and an integer k, reverse the first k characters for every 2k characters counting from the start of the string.

If there are fewer than k characters left, reverse all of them. If there are less than 2k but greater than or equal to k characters, then reverse the first k characters and leave the other as original.
Example 1:

Input: s = "abcdefg", k = 2
Output: "bacdfeg"

SOLUTION::
class Solution {
    // Helper method to reverse a portion of the array
    public void reverse(char[] arr, int i, int j) {
        // Reverse the subarray from index i to j
        while (i < j) {
            char temp = arr[i];
            arr[i] = arr[j];
            arr[j] = temp;
            
            i++;
            j--;
        }
    }

    public String reverseStr(String s, int k) {
        char[] arr = s.toCharArray();  // Convert string to character array
        int n = arr.length;            // Length of the array
        int i = 0;
        
        // Iterate through the string in steps of 2k
        while (i < n) {
            // Calculate the end of the current chunk of k characters to reverse
            int j = Math.min(i + k - 1, n - 1);  // Handle cases where fewer than k characters remain
            reverse(arr, i, j);  // Reverse the first k characters in this chunk
            i = i + 2 * k;       // Move to the next chunk (skip k characters after reversing)
        }
        
        return new String(arr);  // Convert the array back to a string and return
    }
}
